{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww14520\viewh10100\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 %\{\
#Include <math.h>\
#include \'93calc.h\'94\
\
%\}\
\
\
/* Types */\
\
#union \{\
\
true		true;\
false		false;\
short		short;\
char		char;\
long		long;\
bool		bool;\
integer	int;\
double	double;\
float		float;\
uint		uint;\
short		short;\
long		long;\
float		float;\
\
\}\
\
\
/* Define our terminal symbols (tokens). This should match the lex file */\
/* We also define the type they represent */\
\
%token <val>  NUM\
%token <tptr> VAR FNCT\
%type <val> exp\
/*****TOKENS**********/\
\
\
%token EMPTYSTRING\
%token LINECOMMENT\
%token OPENCOMMENT\
%token ENDCOMMENT\
%token DOCUMENTATION\
%token IMPORT\
%token NAMESPACE\
%token DOUBLEQUESTIONOPERATOR\
%token BACKTICK\
%token FRONTTICK\
%token LBRACKET\
%token RBRACKET\
%left  	  PERIOD\
%left	  PLUS\
%left     MINUS\
%right  ASSIGNS\
%right  SHALLOWCOPY\
%left    DIVISION\
%left    MULTIPLY\
%left    MOD\
%left    INTEGERDIVISION\
%left     REMAINDER\
%left    SHIFTLEFT\
%left    SHIFTRIGHT\
\'93%left  ADDASIGN\
\'93%left\'94 MINUSASSIGN\
%left    DIVASSIGN\
%right  MULTASSIGN\
%token FACTORIAL\
%token EXPONENTIAL\
%token PERCENT\
%token  INCREMENT\
%token DECREMENT\
%token GT\
%token LT\
%token GTEQUALS\
%token LTEQUALS\
%token NOTEQUAL\
%token NUMERAL\
%token LETTERS\
%token CAPITALS\
%token CAMELCASEALPHABET\
%token STRING\
%token LETTERS\
%token VARIABLENAME\
%token TYPENAME\
%token TYPEOPERATOR\
%token ATOPERATOR\
%token LPAREN\
%token RPAREN\
%token RIGHTARROW\
%token LEFTARROW\
%token SMALLARROW\
%token SMALLLEFTARROW\
%token <true> TRUE\
%token <false> FALSE\
%token NOT\
%token ISTRUE\
%token ISFALSE\
%token AND\
%token XOR\
%token OR\
%token NOTOR\
%token NOTAND\
%token LIKE\
%token AMPERSANDOP\
%token BITWISEOR\
%token BITWISEAND\
%token BITWISEXOR\
%token BITWISENOT\
%token BOOLEANEQUALS\
%token COLONOPERATOR\
%token FLOOR\
%token CEILING\
%token ROUND\
%token RANDOM\
%token ALSO\
%token LENGTH\
%token ISLETTER\
%token ISDIGIT\
%token ISWHITESPACE\
%token ISUPPERCASE\
%token ISLOWERCASE\
%token TOUPPERCASE\
%token TOLOWERCASE\
%token PUBLIC\
%token PROTECTEDF\
%token INTERNAL\
%token PRIVATE\
%token PACKAGE\
%token FRIEND\
%token TRUST\
%token FUNCTION\
%token VIRTUAL\
%token CONST\
%token FLUX\
%token MVC\
%token MVCBINDING\
%token CONTROLLER\
%token MODEL\
%token VIEW\
%token TARGET\
%token TEMPLATEOPERATOR\
%token DEEP\
%token NEED\
%token WILDCARD\
%token RETURNStMT\
%token SYNCHRONIZED\
%token LOCK\
%token SPINLOCK\
%token SEMAPHORE\
%token MONITOR\
%token OPERATOR\
%token STRINGCOPYBYREF\
%token CLASS\
%token ENDLESS\
%token THROWS\
%token LBRACE\
%token RBRACE\
%token STREAM\
%token VOLATILE\
%token VARIABLEOPERATOR\
%token NEW\
%token GENERIC\
%token ATOM\
%token CONSTRUCTOR\
%token APPLICATION\
%token APPOPERATOR\
%token THIS\
%token SCOPEOPERATOR\
%token FOR\
%token SEMICOLON\
%token COMMA\
%token RELEASE\
%token RETAIN\
%token RETAIN\
%token AUTORELEASE\
%token GETENTITYPOOL\
%token POOLRUN\
%token FROMSTRING\
%token TOSTRING\
%token CONVERT\
%token PRINTBUG\
%token TRY\
%token CATCH\
%token FINALLY\
%token AWAIT\
%token LAST\
%token AUTOFILL\
%token TAG\
%token FROZEN\
%token THAW\
%token INLINE\
%token BYTECODE\
%token NULL\
%token AS\
%token GLOBAL\
%token WAIT\
%token SUCCESS\
%token TEXTS\
%token AUTO\
%token STATIC\
%token SEALED\
%token ASSERT\
%token FINAL\
%token CONCATOPERATOR\
%token ANTICONCATOPERATOR\
%token STRICT\
%token UNION\
%token REQUIRES\
%token SATISFIES\
%token SIZEOF\
%token <short> SHORT\
%token <char> CHAR\
%token <long> LONG\
%token <bool> BOOLEAN\
%token <int>   INTEGER\
%token <double> DOUBLE\
%token <float> FLOAT\
%token FIXED\
%token <uint>	UNSIGNEDINT\
%token <ushort>	UNSIGNEDSHORT\
%token <ulong>	UNSIGNEDLONG\
%token <ufloat>	UNSIGNEDFLOAT\
%token REGISTER\
%token	ENUM\
%toekn	EXTERN\
%token	ASSIGNER\
%token	CONTINUE\
%token	TYPEDEF\
%token 	EXP\
%token	ABS\
%token	IF\
%token	ELSE\
%token	ELSEIF\
%token	NOOP\
%token	RESIDUE\
%token	RESIDE\
%token LEAP\
%token ITERATOR\
%token IN\
%token RANGE\
%token	FOREACH\
%token	DO\
%token	WHILE\
%token	UNTIL\
%token	WHERE\
%token	SHORTWHILE\
%token	SHORTFOR\
%token 	DOUBLELEFTBRACE\
%token	DOUBLERIGHTBRACE\
%token	SWITCH\
%token	CASE\
%token	BREAK\
%token	EXIT\
%token	PASS\
%token	BRANCH\
%token	JUMP\
%token	IMPLEMENTS\
%token	EXTENDS\
%token	INTERFACE\
%token	ABSTRACTCLASS\
%token	ABSTRACT\
%token 	SUPER\
%token 	ISOPERATOR\
%token	ISNOTOPERATOR\
%token	ISNOTHINGOPERATOR\
%token 	INCLUSION\
%token	REFLECTION\
%token	ARRAYTYPEOPERATOR\
%token	DOUBLEARRAYTYPEOPERATOR\
%token	GETPROPERTY\
%token	SETPROPERTY\
%token	BASE\
%token	SHALL\
%token	EXTENDMETHOD\
%token	CALLER\
%token	RET\
%token	PROCEDURE\
%token	POINTEROPERATOR\
%token	OPERATOR\
%token	CALLBYREACTION\
%token	CAR\
%token	CDR\
%token 	PROMISE\
%token	FUTURES\
%token	BASE\
%token	TAIL\
%token	TIEOPERATOR\
%token	LIKEOPERATOR\
\
/*** Advanced Primitives****?\
\
%token COLLECTION\
%token HASHTABLE\
%token SET\
%token ARRAY\
%token ARRAYLIST\
%token LINKEDLIST\
%token DOUBLYLINKEDLIST\
%token DOUBLYLINKEDARRAYLIST\
%token VECTOR\
%token MAP\
%token MULTIMAP\
%token STRING\
%token OBJECT\
%token LIST\
%token BTREE\
%token NARYTREE\
%token TRIETREE\
%token REDBLACKTREE\
%token SPLAYTREE\
%token AVLTREE\
%token GRAPH\
%token DIRECTEDGRAPH\
%token SINGLEDIRECTIONGRAPH\
%token STACK\
%token QUEUE\
%token CIRCULARQUEUE\
%token CIRCULARLIST\
\
/******SORT*********/\
\
%token BUBBLESEORT\
%token QUICKSORT\
%token MERGESORT\
%token TREETRAVERSAL\
%token BFS-TREE\
%token DFS-TREE\
%token BFS-GRAPH\
%token DFS-GRAPH\
%token DIJKSTRA\
%token ASTAR\
\
\
/*\
%right \'91=\'91\
%left \'91-\'91, \'91+\'92\
%left \'91*\'92 \'91/\'91\
%left NEG		/* negation-unary minus */\
%right \'91^\'92		/* Exponentiation\
*/\
\
/* Define the type of node our nonterminal symbols represent\
   The types refer to the union above. */\
\
/* %type <typefromunion>  nonterminal */\
\
\
%start program\
\
%start symbol\
\
/** exp: \'85.. | exp + exp \{ $$ = $1 + $3 \}  <\'97 $1 refers to exp one and $3 to exp 3. $$ refers to the semantics of the addition**/\
\
\
%%\
\
/* EBNF */\
\
/*\
stmt : var_decl | fun_decl\
	| expr \{ $$ = new \
\
*/\
\
\
}